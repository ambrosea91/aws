# .github/workflows/database-deploy.yml

name: Terraform Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Select environment (dev, test, prod)"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - test
          - prod
      branch:
        description: "Select branch to deploy from"
        required: true
        default: "develop"

jobs:
  deploy:
    name: Deploy Aurora PostgreSQL
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::390844768648:role/GitHubActionsOIDCRole
          aws-region: us-east-1

      - name: Verify AWS Identity
        run: aws sts get-caller-identity

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -var-file=${{ github.event.inputs.environment }}.tfvars

      - name: Terraform Apply
        run: terraform apply -auto-approve -var-file=${{ github.event.inputs.environment }}.tfvars

# name: OIDC Test
# on:
#   workflow_dispatch:

# jobs:
#   check-oidc:
#     runs-on: ubuntu-latest
#     permissions:
#       id-token: write
#       contents: read

#     steps:
#       - name: Request OIDC token
#         run: |
#           echo "Getting OIDC token..."
#           TOKEN=$(curl -s -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL")
#           echo "OIDC token acquired:"
#           echo "$TOKEN"
